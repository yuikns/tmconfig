{"commits":[{"commit":"ad28c88dfb18e1a3c180b3a14bbc3069cbb509a0","date":"2017-10-08T20:01:47+02:00","author":"Allan Odgaard","summary":"Escape potential spaces in file URLs","body":"If the Git bundle is checked out to Application Support then TM_BUNDLE_SUPPORT will contain a space.\n\nNot escaping spaces in file URLs seems to have worked in the past (with WebKit) but escaping them is the right thing to do, and it does not work in macOS 10.12."},{"commit":"9cf5c1266fbfa3418a66e7cbf6036ef34ccdd5a8","date":"2017-08-09T14:41:12+02:00","author":"Stefan Daschek","summary":"Make `git blame` always use 8 digit refs","body":"Because `Scm::Git#short_rev` (as well as `ApplicationHelper#short_rev`) always produce 8 digit refs, we need the output of `git blame` to use the same length, otherwise clicking on a (short) revision in the blame window fails to select the appropriate revision from the select at the top. Fixes https://github.com/textmate/git.tmbundle/issues/46\n\nNote that we have to specify `abbrev=7` to actually get 8 digit revisions (see man page excerpt below).\n\nLong explanation: In some cases / repositories, `git blame` seems to use longer refs by default. I’m not sure why, as the man page (git 2.13.2) explicitly states that the default is 8 (7+1) digits:\n\n```\n  --abbrev=&lt;n&gt;\n     Instead of using the default 7+1 hexadecimal digits as the abbreviated object name, use &lt;n&gt;+1 digits. Note that 1\n     column is used for a caret to mark the boundary commit.\n```\n\nI suspect that this description is incorrect and that the default value is instead taken from `core.abbrev`. The man page for git-config says about this setting:\n\n```\nIf unspecified or set to &quot;auto&quot;, an appropriate value is computed based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object names to stay unique for some time.\n```"},{"commit":"8dd97cde669ff785715f735b811db81d8f957e34","date":"2017-08-09T16:37:29+02:00","author":"Stefan Daschek","summary":"Fix annotate_controller_spec","body":"This broke in “6bb8956 Follow moved files in Annotate/Blame history”.\n\nNote that even this fixed spec still fails until “c01e5db Support positive and negative timezone offset”."},{"commit":"ae8520dd62631c63700958740ef541abb7de53a0","date":"2017-08-09T16:25:50+02:00","author":"Stefan Daschek","summary":"Fix remote_controller_spec","body":"This broke in “7134197 Fix bug in parsing remote branch name during git pull.”"},{"commit":"7b52a8f1955464d5f108b07db870d36bb376ece4","date":"2017-08-09T16:09:02+02:00","author":"Stefan Daschek","summary":"Fix specs for Ruby 1.8.7, document how to run them"},{"commit":"791422bb123fb79281c477a5f92c49b49c86f651","date":"2017-03-28T20:31:12-04:00","author":"Mike Ball","summary":"fix &quot;setAttribute&quot; bug in git log"},{"commit":"d1db42c2d71948662098183a6df519fb53a7a15b","date":"2016-06-24T09:21:28+02:00","author":"Allan Odgaard","summary":"Recognize ‘drop’ and ‘exec’ keywords in git interactive rebase grammar"},{"commit":"93897a78c6e52bef13dadc0d4091d203c5facb40","date":"2016-06-24T09:07:15+02:00","author":"Allan Odgaard","summary":"Allow a commit summary of up to 72 characters before marking it invalid","body":"From ‘git help commit’ the recommendation is simply to make it ‘less than 50 characters’ which we still use as the limit for marking it as deprecated.\n\nI think GitHub used to truncate at 65 characters but currently they truncate at 72 which is a commonly used value for hard wrapping, so it makes sense for us to use this as well."},{"commit":"2e256c7b0b175fd2006e4719e2fdccdffaf20f80","date":"2016-04-30T22:28:09+10:00","author":"Arthur Rimbun","summary":"Fix error when deleting local branch containing slash character","body":"This fixes issue #40"},{"commit":"713419789ec6910eb669966ec36cb43a257302c1","date":"2016-04-19T21:56:26+10:00","author":"Arthur Rimbun","summary":"Fix bug in parsing remote branch name during git pull."},{"commit":"1a9ae6ef64eab14e72bf12ceaa04560335e3bdf5","date":"2015-10-25T18:59:28+01:00","author":"Jacob Carlborg","summary":"Add support for automatically continue rebase after commit","body":"Requires TextMate 2.0-beta.8.2"}],"name":"Git"}