bplist00Ù	
VoutputUinput]keyEquivalentUscopeTuuid]fallbackInput_beforeRunningCommandWcommandTname]showAsTooltipYselectionR~Zsource.sbt_$F5E08907-DD4F-4FD2-8777-23C96D4BF738TwordSnop_(±#!/usr/bin/env ruby18 -wKU
require ENV['TM_SUPPORT_PATH'] + '/lib/ui.rb'

choices = [{ "display" => 'logLevel',                     },
 { "display" => 'persistLogLevel',              },
 { "display" => 'traceLevel',                   },
 { "display" => 'persistTraceLevel',            },
 { "display" => 'showSuccess',                  },
 { "display" => 'showTiming',                   },
 { "display" => 'timingFormat',                 },
 { "display" => 'logManager',                   },
 { "display" => 'logBuffered',                  },
 { "display" => 'projectCommand',               },
 { "display" => 'sessionSettings',              },
 { "display" => 'stateBuildStructure',          },
 { "display" => 'buildStructure',               },
 { "display" => 'appConfiguration',             },
 { "display" => 'thisProject',                  },
 { "display" => 'thisProjectRef',               },
 { "display" => 'configuration',                },
 { "display" => 'commands',                     },
 { "display" => 'initialize',                   },
 { "display" => 'onLoad',                       },
 { "display" => 'onUnload',                     },
 { "display" => 'logged',                       },
 { "display" => 'historyPath',                  },
 { "display" => 'shellPrompt',                  },
 { "display" => 'analysis',                     },
 { "display" => 'watch',                        },
 { "display" => 'pollInterval',                 },
 { "display" => 'watchSources',                 },
 { "display" => 'watchTransitiveSources',       },
 { "display" => 'baseDirectory',                },
 { "display" => 'target',                       },
 { "display" => 'crossTarget',                  },
 { "display" => 'sourceDirectory',              },
 { "display" => 'sourceManaged',                },
 { "display" => 'scalaSource',                  },
 { "display" => 'javaSource',                   },
 { "display" => 'sourceDirectories',            },
 { "display" => 'unmanagedSourceDirectories',   },
 { "display" => 'unmanagedSources',             },
 { "display" => 'managedSourceDirectories',     },
 { "display" => 'managedSources',               },
 { "display" => 'sources',                      },
 { "display" => 'sourceFilter',                 },
 { "display" => 'defaultExcludes',              },
 { "display" => 'resourceDirectory',            },
 { "display" => 'resourceManaged',              },
 { "display" => 'unmanagedResourceDirectories', },
 { "display" => 'unmanagedResources',           },
 { "display" => 'managedResourceDirectories',   },
 { "display" => 'managedResources',             },
 { "display" => 'resourceDirectories',          },
 { "display" => 'resources',                    },
 { "display" => 'classDirectory',               },
 { "display" => 'docDirectory',                 },
 { "display" => 'cacheDirectory',               },
 { "display" => 'cleanFiles',                   },
 { "display" => 'cleanKeepFiles',               },
 { "display" => 'crossPaths',                   },
 { "display" => 'sourceGenerators',             },
 { "display" => 'resourceGenerators',           },
 { "display" => 'autoCompilerPlugins',          },
 { "display" => 'maxErrors',                    },
 { "display" => 'scaladocOptions',              },
 { "display" => 'scalacOptions',                },
 { "display" => 'javacOptions',                 },
 { "display" => 'compileOrder',                 },
 { "display" => 'initialCommands',              },
 { "display" => 'compileInputs',                },
 { "display" => 'scalaHome',                    },
 { "display" => 'scalaInstance',                },
 { "display" => 'scalaVersion',                 },
 { "display" => 'crossScalaVersions',           },
 { "display" => 'classpathOptions',             },
 { "display" => 'definedSbtPlugins',            },
 { "display" => 'sbtPlugin',                    },
 { "display" => 'clean',                        },
 { "display" => 'console',                      },
 { "display" => 'consoleQuick',                 },
 { "display" => 'consoleProject',               },
 { "display" => 'compile',                      },
 { "display" => 'compilers',                    },
 { "display" => 'doc',                          },
 { "display" => 'copyResources',                },
 { "display" => 'aggregate',                    },
 { "display" => 'packageBin',                   },
 { "display" => 'packageDoc',                   },
 { "display" => 'packageSrc',                   },
 { "display" => 'packageOptions',               },
 { "display" => 'packageConfiguration',         },
 { "display" => 'artifactPath',                 },
 { "display" => 'artifact',                     },
 { "display" => 'artifactClassifier',           },
 { "display" => 'artifactName',                 },
 { "display" => 'mappings',                     },
 { "display" => 'selectMainClass',              },
 { "display" => 'mainClass',                    },
 { "display" => 'run',                          },
 { "display" => 'runMain',                      },
 { "display" => 'discoveredMainClasses',        },
 { "display" => 'runner',                       },
 { "display" => 'trapExit',                     },
 { "display" => 'fork',                         },
 { "display" => 'outputStrategy',               },
 { "display" => 'javaHome',                     },
 { "display" => 'javaOptions',                  },
 { "display" => 'testLoader',                   },
 { "display" => 'loadedTestFrameworks',         },
 { "display" => 'definedTests',                 },
 { "display" => 'executeTests',                 },
 { "display" => 'test',                         },
 { "display" => 'testOnly',                     },
 { "display" => 'testOptions',                  },
 { "display" => 'testFrameworks',               },
 { "display" => 'testListeners',                },
 { "display" => 'isModule',                     },
 { "display" => 'Classpath',                    },
 { "display" => 'name',                         },
 { "display" => 'normalizedName',               },
 { "display" => 'organization',                 },
 { "display" => 'defaultConfiguration',         },
 { "display" => 'defaultConfigurationMapping',  },
 { "display" => 'products',                     },
 { "display" => 'productDirectories',           },
 { "display" => 'exportJars',                   },
 { "display" => 'exportedProducts',             },
 { "display" => 'unmanagedClasspath',           },
 { "display" => 'unmanagedJars',                },
 { "display" => 'managedClasspath',             },
 { "display" => 'internalDependencyClasspath',  },
 { "display" => 'externalDependencyClasspath',  },
 { "display" => 'dependencyClasspath',          },
 { "display" => 'fullClasspath',                },
 { "display" => 'internalConfigurationMap',     },
 { "display" => 'classpathConfiguration',       },
 { "display" => 'ivyConfiguration',             },
 { "display" => 'ivyConfigurations',            },
 { "display" => 'moduleSettings',               },
 { "display" => 'unmanagedBase',                },
 { "display" => 'updateConfiguration',          },
 { "display" => 'ivySbt',                       },
 { "display" => 'ivyModule',                    },
 { "display" => 'classpathFilter',              },
 { "display" => 'update',                       },
 { "display" => 'updateClassifiers',            },
 { "display" => 'transitiveClassifiers',        },
 { "display" => 'updateSbtClassifiers',         },
 { "display" => 'publishConfiguration',         },
 { "display" => 'publishLocalConfiguration',    },
 { "display" => 'deliverConfiguration',         },
 { "display" => 'deliverLocalConfiguration',    },
 { "display" => 'makePomConfiguration',         },
 { "display" => 'packagedArtifacts',            },
 { "display" => 'publishMavenStyle',            },
 { "display" => 'credentials',                  },
 { "display" => 'makePom',                      },
 { "display" => 'deliver',                      },
 { "display" => 'deliverLocal',                 },
 { "display" => 'publish',                      },
 { "display" => 'publishLocal',                 },
 { "display" => 'pomExtra',                     },
 { "display" => 'pomPostProcess',               },
 { "display" => 'pomIncludeRepository',         },
 { "display" => 'moduleID',                     },
 { "display" => 'version',                      },
 { "display" => 'projectID',                    },
 { "display" => 'externalResolvers',            },
 { "display" => 'resolvers',                    },
 { "display" => 'projectResolver',              },
 { "display" => 'fullResolvers',                },
 { "display" => 'otherResolvers',               },
 { "display" => 'moduleConfigurations',         },
 { "display" => 'retrievePattern',              },
 { "display" => 'retrieveConfiguration',        },
 { "display" => 'offline',                      },
 { "display" => 'ivyPaths',                     },
 { "display" => 'libraryDependencies',          },
 { "display" => 'allDependencies',              },
 { "display" => 'projectDependencies',          },
 { "display" => 'ivyXML',                       },
 { "display" => 'ivyScala',                     },
 { "display" => 'ivyValidate',                  },
 { "display" => 'ivyLoggingLevel',              },
 { "display" => 'publishTo',                    },
 { "display" => 'artifacts',                    },
 { "display" => 'projectDescriptors',           },
 { "display" => 'autoUpdate',                   },
 { "display" => 'retrieveManaged',              },
 { "display" => 'managedDirectory',             },
 { "display" => 'classpathTypes',               },
 { "display" => 'publishArtifact',              },
 { "display" => 'packagedArtifact',             },
 { "display" => 'checksums',                    },
 { "display" => 'autoScalaLibrary',             },
 { "display" => 'sbtResolver',                  },
 { "display" => 'sbtDependency',                },
 { "display" => 'sbtVersion',                   },
 { "display" => 'parallelExecution',            },
 { "display" => 'settings',                     },
 { "display" => 'streams',                      },
 { "display" => 'isDummyTask',                  },
 { "display" => 'taskDefinitionKey',            },
 { "display" => 'resolvedScoped'                }]

TextMate::UI.complete(choices)_SBT Code Completion   " ( 6 < A O f n s     À Å É)~                           )